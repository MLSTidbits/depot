#!/usr/bin/env bash
set -euo pipefail

function update-conf () {
    local key="$1" val="$2"
    local pattern="^$key="
    [[ -z "$val" ]] && return 0
    if grep -qE "$pattern" "$CONFIG_PATH"; then
        sed -i "s|$pattern.*|$key=\"$val\"|" "$CONFIG_PATH"
    else
        echo "$key=\"$val\"" >> "$CONFIG_PATH"
    fi
}

appTitle="depot"
verboseLib="/usr/lib/depot/verbose"

[[ $# -eq 0 ]] && { echo "Usage: $appTitle config [--local|--global] key=value ..."; exit 0; }

CONFIG_SCOPE="local"
MAINTAINER_NAME=""
MAINTAINER_EMAIL=""
GPG_KEY_ID=""

while [[ $# -gt 0 ]]; do
    case "$1" in
        -l|--local  )  CONFIG_SCOPE="local" ; shift                           ;;
        -g|--global ) CONFIG_SCOPE="global" ; mkdir -p "$HOME/.depot" ; shift ;;
        -h|--help   )   echo "Help text..." ; exit 0                          ;;
        *)
            for arg in "$@"; do
                key="${arg%%=*}"
                val="${arg#*=}"
                case "$key" in
                    maintainer.name  ) MAINTAINER_NAME="$val"                    ;;
                    maintainer.email ) MAINTAINER_EMAIL="$val"                   ;;
                    gpg.id           ) GPG_KEY_ID="$val"                         ;;
                    *                ) "$verboseLib" error "Unknown key: '$key'" ;;
                esac
            done
            break
        ;;
    esac
done

CONFIG_FILE="settings.conf"
CONFIG_PATH=$([[ "$CONFIG_SCOPE" == "local" ]] && echo ".depot/$CONFIG_FILE" || echo "$HOME/.depot/$CONFIG_FILE")
mkdir -p "$(dirname "$CONFIG_PATH")"
touch "$CONFIG_PATH"

update-conf "MAINTAINER_NAME"  "$MAINTAINER_NAME"
update-conf "MAINTAINER_EMAIL" "$MAINTAINER_EMAIL"
update-conf "GPG_ID"           "$GPG_KEY_ID"

"$verboseLib" info "Configuration updated in $CONFIG_PATH"

exit 0
