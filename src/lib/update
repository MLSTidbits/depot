#!/usr/bin/env bash

# `update` Updates the package database and Release files of a Debian package repository.

function update-database () {

    local baseDir="${PWD}"
    local tempFile
    local gpgCmd

    tempFile=$(mktemp)

    apt-ftparchive packages pool > "$tempFile" || $verboseLib error "Failed to rebuild the Packages file"

    if [[ "$DRY_RUN" == true ]]; then
        $verboseLib info "Dry run mode enabled. The following would be written to the Packages file:"
        cat "$tempFile"
        rm -f "$tempFile"
    else
        mv "$tempFile" "${baseDir}/$suite/$components/binary-$arch/Packages"
        $verboseLib info "Updated Packages file at ${baseDir}/$suite/$components/binary-$arch/Packages"
    fi

    $verboseLib error "Failed to generate Release file content"

    if [[ "$DRY_RUN" == true ]]; then
        $verboseLib info "Dry run mode enabled. The following would be written to the Release file:"
        cat "${tempFile}"
        rm -f "${tempFile}"
    else
        mv "${tempFile}" "${releaseFile}"
        $verboseLib info "Updated Release file at ${releaseFile}"
    fi

    {
        echo "Origin: $origin"
        echo "Label: $label"
        echo "Suite: $suite"
        echo "Codename: $codename"
        echo "Architectures: $arch"
        echo "Components: $components"
        echo "Description: $description"
        echo "Maintainer: $maintainer"
    } > "${tempFile}"

    apt-ftparchive release "${baseDir}/dists/$suite" >> "${tempFile}" ||
    $verboseLib error "Failed to generate Release file content"

    local releaseFile="${baseDir}/$suite/Release"

    local releaseGPG="${baseDir}/$suite/Release.gpg"
    local inRelease="${baseDir}/$suite/InRelease"

    if [[ "$DRY_RUN" == true ]]; then
        $verboseLib info "Dry run mode enabled. The following would be written to the Release file:"
        cat "${tempFile}"
        rm -f "${tempFile}"
    else
        mv "${tempFile}" "${releaseFile}"
        $verboseLib info "Updated Release file at ${releaseFile}"
    fi

    if [[ "$SIGN" == true || -n "$key" ]]; then
        gpgCmd="gpg --default-key $key --output $releaseGPG --detach-sign $releaseFile"
        if [[ "$DRY_RUN" == true ]]; then
            $verboseLib info "Dry run mode enabled. The following GPG command would be executed:"
            $verboseLib info "${gpgCmd}"
        else
            eval "${gpgCmd}" 2> /dev/null
            $verboseLib info "Signed Release file and created detached signature at ${baseDir}/main/Release.gpg"
        fi
        gpgCmd="gpg --default-key $key --output $inRelease --clearsign $releaseFile"
        if [[ "$DRY_RUN" == true ]]; then
            $verboseLib info "Dry run mode enabled. The following GPG command would be executed:"
            $verboseLib info "${gpgCmd}"
        else
            eval "${gpgCmd}" 2> /dev/null
            $verboseLib info "Signed Release file and created InRelease at ${baseDir}/main/InRelease"
        fi
    fi

    return 0
}

# Uncomment for debugging
#set -xou pipefail

appName="depot"
appVersion="$(cat /usr/share/doc/depot/version 2>/dev/null || echo "unknown")"

verboseLib="/usr/lib/depot/verbose"

[[ ! -d .depot ]] &&
$verboseLib error "No repository found. Please run '$0 init' first to create a new repository."

# Load configuration
source .depot/config ||
$verboseLib error "Failed to load configuration from .depot/config"

# Settings from configuration can either global or local; the local settings override global
if [[ -f ~/.depot/settings.conf ]]; then
    source ~/.depot/settings.conf ||
    $verboseLib error "Failed to load global configuration from ~/.depot/settings.conf"
elif [[ ! -f ~/.depot/settings.conf && -f .depot/settings.conf ]] ; then
    source .depot/settings.conf ||
    $verboseLib error "Failed to load local configuration from .depot/settings.conf"
else
    $verboseLib error \
    "No settings.conf file found. Please run '$0 config' to set up the repository settings."
fi

# Default values for optional settings
origin="${ORIGIN:-"Unknown"}"
label="${LABEL:-"default"}"
suite="${SUITE:-"stable"}"
codename="${CODENAME:-$suite}"
arch="${ARCH:-$(dpkg --print-architecture)}"
components="${COMPONENTS[*]:-"main"}"
description="${DESCRIPTION:-"Debian/Ubuntu package repository"}"
key="${GPG_ID:-""}"
maintainer="${MAINTAINER_NAME <$MAINTAINER_EMAIL>:-"$USER <$USER@$(hostname)>"}"

DRY_RUN=false
SIGN=false

helpInfo="$(cat <<- EOL
$appName - $appVersion - Update the package database and Release files.
Usage: $appName update

Options:
    -d, --dry-run                   Show what would be done without making any changes.
    -s, --sign                      Sign the Release file with GPG: This is the default
                                    if GPG_KEY_ID is set.
    -D, --description DSC..         Update the description field in the Release file.
    -h, --help                      eShow this help message and exit.

Examples:
    $appName update
    $appName update --dry-run
    $appName update --sign
    $appName update --description "New description for the repository"

Note:
    The update command should be run after adding or removing packages to ensure
    the package database and Release files are current.

Copyright:
    2025 MLS Tidbits <contact@mlstidbits.com>
    2025 Michael Schaecher <michaelschaecher@mlstidbits.com>
License:
    GPLv3+ as published by the Free Software Foundation all rights reserved.
EOL
)"

# Preflight checks
[[ ! -x "$verboseLib" ]] && { echo "Error: verbose library not found at $verboseLib" >&2 ; exit 1 ;}

[[ $# -eq 0 ]] && { echo "$helpInfo"; exit 0; }

/usr/lib/depot/verify-init

while [[ $# -gt 0 ]]; do case "$1" in
    -d|--dry-run            ) DRY_RUN=true                  ; shift   ;;
    -s|--sign               ) SIGN=true                     ; shift   ;;
    -D|--description        ) description="$2"              ; shift 2 ;;
    -h|--help               ) echo "$appInfo"               ; exit 0  ;;
    -*                      ) $verboseLib error "Unknown option: $1"  ;;
    *                       ) break                                   ;;
esac ; done

update-database

exit 0
